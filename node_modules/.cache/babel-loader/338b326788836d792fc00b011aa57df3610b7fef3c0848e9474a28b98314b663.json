{"ast":null,"code":"jsx;\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Создаем асинхронное действие для получения информации о пользователе\nexport const fetchUser = createAsyncThunk('user/fetchUser', async (userId, thunkAPI) => {\n  try {\n    const response = await axios.get(`/api/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    // Если запрос завершился с ошибкой, возвращаем ошибку\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n// Создаем срез состояния и редьюсер для пользователя\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    data: null,\n    isLoading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    // Обрабатываем начало загрузки пользователя\n    builder.addCase(fetchUser.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    });\n\n    // Обрабатываем успешное получение информации о пользователе\n    builder.addCase(fetchUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.data = action.payload;\n    });\n\n    // Обрабатываем ошибку получения информации о пользователе\n    builder.addCase(fetchUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\n\n// Экспортируем редьюсер для пользователя\nexport default userSlice.reducer;","map":{"version":3,"names":["jsx","createAsyncThunk","createSlice","axios","fetchUser","userId","thunkAPI","response","get","data","error","rejectWithValue","message","userSlice","name","initialState","isLoading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/My Disk D/Developt/some_shop/src/features/user/userSlice.js"],"sourcesContent":["jsx\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Создаем асинхронное действие для получения информации о пользователе\nexport const fetchUser = createAsyncThunk(\n    'user/fetchUser',\n    async (userId, thunkAPI) => {\n        try {\n            const response = await axios.get(`/api/users/${userId}`);\n            return response.data;\n        } catch (error) {\n            // Если запрос завершился с ошибкой, возвращаем ошибку\n            return thunkAPI.rejectWithValue(error.message);\n        }\n    }\n);\n\n// Создаем срез состояния и редьюсер для пользователя\nconst userSlice = createSlice({\n    name: 'user',\n    initialState: {\n        data: null,\n        isLoading: false,\n        error: null,\n    },\n    reducers: {},\n    extraReducers: (builder) => {\n        // Обрабатываем начало загрузки пользователя\n        builder.addCase(fetchUser.pending, (state) => {\n            state.isLoading = true;\n            state.error = null;\n        });\n\n        // Обрабатываем успешное получение информации о пользователе\n        builder.addCase(fetchUser.fulfilled, (state, action) => {\n            state.isLoading = false;\n            state.data = action.payload;\n        });\n\n        // Обрабатываем ошибку получения информации о пользователе\n        builder.addCase(fetchUser.rejected, (state, action) => {\n            state.isLoading = false;\n            state.error = action.payload;\n        });\n    },\n});\n\n// Экспортируем редьюсер для пользователя\nexport default userSlice.reducer;"],"mappings":"AAAAA,GAAG;AACH,SAASC,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CACrC,gBAAgB,EAChB,OAAOI,MAAM,EAAEC,QAAQ,KAAK;EACxB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,cAAaH,MAAO,EAAC,CAAC;IACxD,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ;IACA,OAAOJ,QAAQ,CAACK,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAClD;AACJ,CACJ,CAAC;;AAED;AACA,MAAMC,SAAS,GAAGX,WAAW,CAAC;EAC1BY,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVN,IAAI,EAAE,IAAI;IACVO,SAAS,EAAE,KAAK;IAChBN,KAAK,EAAE;EACX,CAAC;EACDO,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxB;IACAA,OAAO,CAACC,OAAO,CAAChB,SAAS,CAACiB,OAAO,EAAGC,KAAK,IAAK;MAC1CA,KAAK,CAACN,SAAS,GAAG,IAAI;MACtBM,KAAK,CAACZ,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC;;IAEF;IACAS,OAAO,CAACC,OAAO,CAAChB,SAAS,CAACmB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACb,IAAI,GAAGe,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC;;IAEF;IACAN,OAAO,CAACC,OAAO,CAAChB,SAAS,CAACsB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACZ,KAAK,GAAGc,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;;AAEF;AACA,eAAeZ,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}