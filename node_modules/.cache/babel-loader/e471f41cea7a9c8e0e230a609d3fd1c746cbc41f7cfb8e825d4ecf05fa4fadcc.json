{"ast":null,"code":"// reduxtoolkit\njsx;\nimport axios from 'axios';\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../../utils/constants\";\nexport const getCategories = createAsyncThunk('categories/getCategories', async (_, thunkAPI) => {\n  try {\n    const res = await axios(`${BASE_URL}/categories`);\n    return res.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nconst categoriesSlice = createSlice({\n  name: 'categories',\n  initialState: {\n    list: [],\n    isLoading: false\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getCategories.pending, state => {\n      state.isLoading = true;\n    }).addCase(getCategories.fulfilled, (state, action) => {\n      state.list = action.payload;\n      state.isLoading = false;\n    }).addCase(getCategories.rejected, state => {\n      state.isLoading = false;\n    });\n  }\n});\nexport default categoriesSlice.reducer;","map":{"version":3,"names":["jsx","axios","createAsyncThunk","createSlice","BASE_URL","getCategories","_","thunkAPI","res","data","error","rejectWithValue","message","categoriesSlice","name","initialState","list","isLoading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/My Disk D/Developt/some_shop/src/features/categories/categoriesSlice.js"],"sourcesContent":["// reduxtoolkit\njsx\nimport axios from 'axios';\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../../utils/constants\";\n\nexport const getCategories = createAsyncThunk(\n    'categories/getCategories',\n    async (_, thunkAPI) => {\n        try {\n            const res = await axios(`${BASE_URL}/categories`);\n            return res.data;\n        } catch (error) {\n            return thunkAPI.rejectWithValue(error.message);\n        }\n    }\n);\n\nconst categoriesSlice = createSlice({\n    name: 'categories',\n    initialState: {\n        list: [],\n        isLoading: false,\n    },\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(getCategories.pending, (state) => {\n                state.isLoading = true;\n            })\n            .addCase(getCategories.fulfilled, (state, action) => {\n                state.list = action.payload;\n                state.isLoading = false;\n            })\n            .addCase(getCategories.rejected, (state) => {\n                state.isLoading = false;\n            });\n    },\n});\n\nexport default categoriesSlice.reducer;"],"mappings":"AAAA;AACAA,GAAG;AACH,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,QAAQ,QAAQ,uBAAuB;AAEhD,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CACzC,0BAA0B,EAC1B,OAAOI,CAAC,EAAEC,QAAQ,KAAK;EACnB,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAAE,GAAEG,QAAS,aAAY,CAAC;IACjD,OAAOI,GAAG,CAACC,IAAI;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAOH,QAAQ,CAACI,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAClD;AACJ,CACJ,CAAC;AAED,MAAMC,eAAe,GAAGV,WAAW,CAAC;EAChCW,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAAChB,aAAa,CAACiB,OAAO,EAAGC,KAAK,IAAK;MACvCA,KAAK,CAACN,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDI,OAAO,CAAChB,aAAa,CAACmB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO;MAC3BH,KAAK,CAACN,SAAS,GAAG,KAAK;IAC3B,CAAC,CAAC,CACDI,OAAO,CAAChB,aAAa,CAACsB,QAAQ,EAAGJ,KAAK,IAAK;MACxCA,KAAK,CAACN,SAAS,GAAG,KAAK;IAC3B,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeJ,eAAe,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}